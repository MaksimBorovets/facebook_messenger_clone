{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","React","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","FormControl","Input","placeholder","value","onChange","event","target","IconButton","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA4BeA,EAtBCC,sBAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QAEpBC,EAFiD,EAApBC,WAEPF,EAAQE,SAGpC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,qBAAuB,sBAAjD,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHd,WAIMR,GAAD,UAAcD,EAAQE,SAAtB,YAA2C,iBAJhD,IAImEF,EAAQA,oB,QCLhFU,EAZKC,IAASC,cAAe,CAC1CC,OAAQ,0CACRC,WAAY,2CACZC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,Y,yBCqERC,MAlEf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACNC,EADM,KACCC,EADD,OAGmBH,IAAMC,SAAS,IAHlC,mBAGNG,EAHM,KAGIC,EAHJ,OAKmBL,IAAMC,SAAS,IALlC,mBAKNrB,EALM,KAKI0B,EALJ,KA+Bb,OAxBAN,IAAMO,WAAU,WACdnB,EAAGoB,WAAW,YAAYC,YAAW,SAACC,GACpCL,EACEK,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CAAEC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAG1D,IAEHf,IAAMO,WAAU,WAEdD,EAAYU,OAAO,6BAClB,IAcD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAI,uJACT,yCAAYrC,KAEZ,sBAAMC,UAAU,aAAhB,SACE,eAACqC,EAAA,EAAD,CAAarC,UAAU,oBAAvB,UACE,cAACsC,EAAA,EAAD,CACEtC,UAAU,cACVuC,YAAY,qBACZC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAWpB,EAASoB,EAAMC,OAAOH,UAE7C,cAACI,EAAA,EAAD,CACE5C,UAAU,mBACV6C,KAAK,SACLC,QA3BU,SAACJ,GACnBA,EAAMK,iBAENxC,EAAGoB,WAAW,YAAYqB,IAAI,CAC5BnD,QAASwB,EACTtB,SAAUA,EACVkD,UAAWzC,IAASS,UAAUiC,WAAWC,oBAE3C7B,EAAS,KAoBDjB,QAAQ,YACRD,MAAM,UACNgD,UAAW/B,EANb,SAQE,cAAC,IAAD,WAKN,cAAC,IAAD,UACGE,EAASQ,KAAI,gBAAGE,EAAH,EAAGA,GAAIpC,EAAP,EAAOA,QAAP,OACZ,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCoC,YC9DToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.68444101.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\nimport React, { forwardRef } from 'react';\nimport './Message.css';\n\n\n\nconst Message = forwardRef(({ message, username }, ref) => {\n\n    const isUser = username === message.username;\n\n\n    return (\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\n            <Card className={isUser ? 'message___userCard' : 'message___guestCard'} >\n                <CardContent>\n                    <Typography\n                        color='white'\n                        variant='h5'\n                        component='h2'>\n                        {!isUser && `${message.username} says :` || 'Uncknown user:'} {message.message}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    )\n    \n})\n\nexport default Message\n","import firebase from'firebase';\n\nconst firebaseApp = firebase.initializeApp ({\n  apiKey: \"AIzaSyBN2iUWNGNcuo7YFdFpQazhh3tWmJctkUM\",\n  authDomain: \"facebook-messanger-1008c.firebaseapp.com\",\n  projectId: \"facebook-messanger-1008c\",\n  storageBucket: \"facebook-messanger-1008c.appspot.com\",\n  messagingSenderId: \"165439518779\",\n  appId: \"1:165439518779:web:4626a1ee635920078b441e\",\n  measurementId: \"G-J09GYXQ6YF\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;","import \"./App.css\";\nimport React, { forwardRef } from \"react\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nfunction App() {\n  const [input, setInput] = React.useState(\"\");\n\n  const [messages, setMessages] = React.useState([]);\n\n  const [username, setUsername] = React.useState(\"\");\n\n  React.useEffect(() => {\n    db.collection(\"messages\").onSnapshot((snapshot) => {\n      setMessages(\n        snapshot.docs.map((doc) => ({ id: doc.id, message: doc.data() }))\n      );\n    });\n  }, []);\n\n  React.useEffect(() => {\n    // const name = prompt('Please enter your name');\n    setUsername(prompt(\"Please enter your name\"));\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://3.bp.blogspot.com/-AAcPm2W7myA/XH02frCd-EI/AAAAAAAAChc/N5ZPSfpuVskqmwRUViKIJWqF51PxriX5gCLcBGAs/w1200-h630-p-k-no-nu/fb-messenger-dark.jpg\" />\n      <h1>Hello, {username}</h1>\n\n      <form className=\"app___form\">\n        <FormControl className=\"app___formControl\">\n          <Input\n            className=\"app___input\"\n            placeholder=\"Enter a message...\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n          <IconButton\n            className=\"app___iconButton\"\n            type=\"submit\"\n            onClick={sendMessage}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!input}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n\n      <FlipMove>\n        {messages.map(({ id, message }) => (\n          <Message key={id} username={username} message={message} />\n        ))}\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}